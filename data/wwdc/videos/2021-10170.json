{
  "id": "10170",
  "year": "2021",
  "url": "https://developer.apple.com/videos/play/wwdc2021/10170/",
  "title": "Meet TestFlight on Mac",
  "speakers": [],
  "duration": "",
  "topics": [
    "App Store, Distribution & Marketing",
    "Developer Tools",
    "Essentials"
  ],
  "hasTranscript": true,
  "hasCode": false,
  "transcript": {
    "fullText": "Welcome to the session \"Meet TestFlight on Mac.\" I'm Shobi Vijayakumar, TestFlight Engineering Manager. I'm really excited to share with you about the amazing new TestFlight features coming soon.\n\nIntroducing this year, one of your most popular request: TestFlight on Mac. TestFlight lets you distribute beta builds of your app to testers and collect valuable feedback. It's been available on iOS and tvOS, and now we are bringing it to MacOS coming this fall.\n\nTestFlight on Mac provides all the same capabilities you have on iOS and tvOS, and it will be available to download on the Mac App Store. You can install beta apps, setup automatic updates, and share feedback. It supports native Mac apps and iOS apps on Apple Silicon Mac.\n\nFirst let's take a look at installing beta apps. You can recruit testers by sending an email invite or by sharing a public link. Once they accept the invite, they become a tester for your app.\n\nThey can browse through different builds grouped by versions to choose a specific build to test and click the install button to download and start testing on Mac.\n\nOnce a beta app is installed, it can be launched from TestFlight anytime. It can also be launched by all means like Dock, Launchpad, and Finder.\n\nTo make it easy to recognize it as a beta app, we show a yellow dot next to the app name in the Dock, in Launchpad, and as a Beta Application in Finder.\n\nTesters can configure automatic updates to have the latest available builds install automatically. This will ensure they are testing the latest build of your app. While testing a beta version of an app, your testers can send you feedback about issues they experience or make suggestions for improvements. They can send feedback directly from your app simply by taking a screenshot, attaching it, adding in the comments to describe the issue, and then submit. You can view this feedback in App Store Connect under the Screenshot Feedback section. If the beta app crashes, then TestFlight automatically captures the crash logs and provides a dialog for testers to enter additional comments. You can download the crash logs and see the feedback under App Store Connect crashes feedback section and in Xcode Organizer.\n\nSo that's a brief overview of the main features of TestFlight on Mac, which helps you test the apps and collect valuable feedback. Now, let's take a look at how native Mac apps and iOS apps on Apple Silicon Mac can be set up for TestFlight followed by improved internal group management and built-in Xcode Cloud features. OK, let's get into the details about distributing native Mac apps with TestFlight.\n\nNative Mac apps require a provisioning profile to be distributed with TestFlight on Mac. We will create and include the provisioning profile for your apps when you use Xcode Automatically manage signing. If your apps manage signing manually, you have to add the profile explicitly. How to create and upload a profile manually is documented in the Developer portal.\n\nOnce uploaded with a provisioning profile, the builds will be displayed under macOS. You can create groups to manage testers and distribute each one, very similar to iOS or tvOS. For each build, you can view the number of invited testers, installations on devices, sessions in the last seven days, crashes, and feedback count. These numbers are aggregated across all of the testers.\n\nWhen you are looking at App Store Connect crashes or screenshots feedback section, you can filter by selecting the platform macOS. You can further filter the feedback by selecting a specific Mac device or MacOS version.\n\nAs you see, native Mac apps distribution with TestFlight is very similar to iOS and tvOS. Let's see how iOS apps on Apple Silicon Macs can be distributed with TestFlight.\n\nFor each tester group, you can control the TestFlight availability of iPhone and iPad apps on Apple Silicon Macs.\n\nWhen enabled, the iOS builds in this group are available to TestFlight on Apple Silicon Macs. When this is disabled, all iOS builds from that group will stop being available on Mac. This provides more flexibility to control who can test the iOS apps on Apple Silicon Macs. The iOS builds are displayed similar to today, but the counts displayed will include the numbers from the Apple Silicon Macs as well.\n\nSimilarly, you can see the crashes and screenshots feedback at App Store Connect under the platform iOS and will include feedback submitted from Apple Silicon Macs. It's that simple to make iOS apps distribute with TestFlight on Apple Silicon Mac. Internal testing has always made testing with your App Store Connect team convenient. This year, we have made new improvements to make internal group management even more flexible. And it's applicable for all supported platforms.\n\nYou can now create multiple internal groups similar to external groups. You can also configure distribution of builds and collection of feedback per internal group.\n\nFor example, let's say you have a Development Team and a QA Team. You can now create an internal group for each of them. You can give the Development Team access to all builds as part of the development life cycle, while the QA Team may only require access to specific stable builds.\n\nFor the Development Team, you would enable the automatic distribution flag to make all current and future builds available to this group, whereas for the QA team, you would choose to manually add specific builds. Now that you saw how internal groups can be configured per use case, I want to show you how to set it up.\n\nYou can create the groups for each team by clicking on the plus button next to Internal Testing. Now give your internal group a name. For the Dev Team, choose Enable automatic distribution. While for QA Team, you can uncheck Enable automatic distribution and click Create. Once the groups are created, for QA team, you can click on the plus button to manually select the builds to be added to the group. Then for each group, you can click on the plus button next to Testers to manually select the ones applicable for the groups and add them. You also have the option to enable or disable the feedback per group, just like external testing.\n\nIf you use the App Store Connect API, you can manage internal groups with different configurations through the BetaGroups Resource. Similarly if you use App Store Connect on iOS, they can also be managed from there. Well, these are the major improvements to make internal testing more flexible. Lastly, we have integrated exciting Xcode Cloud features directly into TestFlight.\n\nThis week, Apple introduced Xcode Cloud.\n\nXcode Cloud integrates with TestFlight and provides a seamless experience to automatically build, test, and distribute your apps. To learn more about Xcode Cloud, check out the session \"Meet Xcode Cloud.\" First, Xcode Cloud manages beta build distribution through TestFlight to provide a seamless experience by automatically distributing builds to specific beta groups. Second, your builds are organized in the way your development team works via Build Groups.\n\nLet me show you how it looks like in App Store Connect.\n\nHere is the Builds Groups view, where you will find builds grouped by the Xcode Cloud workflow and GIT branch.\n\nThey are supported in the App Store Connect app on iOS, too.\n\nFor internal testers on TestFlight, the Build Groups display makes it easier to find builds based on the more familiar GIT branch names and Xcode Cloud workflows for internal testing.\n\nYou can also filter feedback by a specific Build Group under the Feedback section in App Store Connect.\n\nWell, these are the amazing features of TestFlight coming soon this year. TestFlight on Mac supports both native Mac apps and iOS apps on Apple Silicon Macs. You can start beta testing on Mac coming fall. Improve internal group management to create multiple groups as per your needs. And finally, Xcode Cloud integrates with App Store Connect and TestFlight to manage build distribution and organize them by build groups. You can sign up for Xcode Cloud Beta today.\n\nI think you will enjoy all the new features added this year and have an amazing TestFlight experience. Try them out and give us your feedback. Thank you very much. [upbeat music]",
    "segments": []
  },
  "resources": {
    "resourceLinks": [
      {
        "title": "Design",
        "url": "https://developer.apple.com/design/"
      },
      {
        "title": "Documentation",
        "url": "https://developer.apple.com/documentation/"
      },
      {
        "title": "Forums",
        "url": "https://developer.apple.com/forums/"
      },
      {
        "title": "Apple Design Awards",
        "url": "https://developer.apple.com/design/awards/"
      }
    ],
    "hdVideo": "https://devstreaming-cdn.apple.com/videos/wwdc/2021/10170/10/D0F6CC7F-69AD-437E-AF5A-E9CFD983F131/downloads/wwdc2021-10170_hd.mp4?dl=1",
    "sdVideo": "https://devstreaming-cdn.apple.com/videos/wwdc/2021/10170/10/D0F6CC7F-69AD-437E-AF5A-E9CFD983F131/downloads/wwdc2021-10170_sd.mp4?dl=1"
  },
  "relatedVideos": [
    {
      "id": "10204",
      "year": "2021",
      "title": "Distribute apps in Xcode with cloud signing",
      "url": "https://developer.apple.com/videos/play/wwdc2021/10204"
    },
    {
      "id": "10268",
      "year": "2021",
      "title": "Explore Xcode Cloud workflows",
      "url": "https://developer.apple.com/videos/play/wwdc2021/10268"
    },
    {
      "id": "10056",
      "year": "2021",
      "title": "Qualities of great iPad and iPhone apps on Macs with M1",
      "url": "https://developer.apple.com/videos/play/wwdc2021/10056"
    },
    {
      "id": "10651",
      "year": "2020",
      "title": "What's new in App Store Connect",
      "url": "https://developer.apple.com/videos/play/wwdc2020/10651"
    }
  ],
  "extractedAt": "2025-07-18T09:19:36.041Z"
}