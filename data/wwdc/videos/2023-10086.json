{
  "id": "10086",
  "year": "2023",
  "url": "https://developer.apple.com/videos/play/wwdc2023/10086/",
  "title": "Explore the USD ecosystem",
  "speakers": [],
  "duration": "",
  "topics": [
    "Graphics & Games"
  ],
  "hasTranscript": true,
  "hasCode": false,
  "transcript": {
    "fullText": "♪ Mellow instrumental hip-hop ♪ ♪ Hi, I'm Dhruv Govil, a 3D Software Engineer.\n\nAnd in this session, I'll be walking you through what's new and exciting in our 3D Content Technologies ecosystem on our platforms.\n\n3D is an amazing form of media, and it's even more important with the introduction of xrOS, where the third dimension will allow for even more immersive experiences.\n\nIt's become far more accessible for everyone to get started with creating amazing visuals on Apple computers they have at home or even the ones in your hands like an iPad.\n\nTo enable this wave of creative content, we've been building on the foundation based on the key technologies that power the creative industry worldwide.\n\nThe first of these technologies is Universal Scene Description, or USD for short.\n\nIt allows for a standard form of representing 3D content to share between applications.\n\nAnd we're now also introducing support for MaterialX on xrOS to portably represent the visual appearance of objects.\n\nUSD is an open source project, created by Pixar, recently renamed to OpenUSD.\n\nIt is production proven and scales from creators making single assets to large studios working on AAA games and films.\n\nUSD allows for expressing complex and flexible relationships between asset data via composition.\n\nApple was an early adopter of USD, adding it to our platforms in 2017 and growing support since.\n\nToday, USD is at the heart of 3D Content on xrOS.\n\nMaterialX is also an open source project, created at Industrial Light & Magic for their work on Star Wars, now developed in conjunction with others like Autodesk and adopted by the Academy Software Foundation.\n\nIt allows artists to combine shader logic into a node graph within their 3D applications, all without needing to know how to code.\n\nThis graph can also be embedded inside USD, so it travels with your scene data.\n\nWe're supporting MaterialX first on xrOS with RealityKit, Apple's real-time 3D rendering framework for building immersive spatial experiences.\n\nWe have four areas to cover as we discover how these 3D content technologies can be used.\n\nTo start, we'll go over how our applications are enabling new uses for 3D content.\n\nNext, we dive deeper into how we support MaterialX as well as color management in RealityKit.\n\nFinally, we'll return to USD and go over the changes that you should be aware of since last year.\n\nLet's begin by looking at the new ways you can use 3D in our applications, before we get into the technologies that power them.\n\nBuilding on the success of Quick Look for USDZ files on iOS, we're now bringing Quick Look to xrOS.\n\nIt's so simple to just open up a USDZ file and see it beautifully and spatially represented, walking around it and connecting it to your surroundings.\n\nWe have a great talk as well on how to easily author content that will look great on this new platform.\n\nLast year, we introduced Freeform, a powerful and easy-to-use brainstorming app.\n\nFreeform now gives you the ability to embed USDZ content, so you can now collaborate on your 3D assets just like you would for other content types, across all supported platforms like macOS, iOS, iPadOS, and now xrOS.\n\nSafari also introduces new support for 3D Content with the Model element.\n\nThe Model element is available on all Apple platforms with Safari and can be enabled under the Developer menu on macOS or Settings on other platforms.\n\nJust as easy to use as the audio, video, and image elements, the Model element lets you embed a USDZ file into your web page with an interactive view, with the ability to rotate around objects.\n\nThis allows creation of more interactive websites, providing your users incredible experiences no matter which of the supported devices they're on.\n\nWe're working with the W3C Immersive Web Working Group on standardization.\n\nWe also have Reality Composer Pro, a new macOS application joining our suite of tools for creators and developers.\n\nUsing USD's composition features, it lets multiple people work in parallel, enabling each person to tackle a different aspect of the scene and see them combined together as each asset updates.\n\nAssets can be authored to USD in your own content creation applications, and Reality Composer Pro lets you prepare them for use in xrOS apps and experiences.\n\nCheck out our Reality Composer Pro sessions to learn more.\n\nAs important as the 3D models you make is the shaders and materials that give them the individual visual aesthetic.\n\nMaterialX gives you the power to have bespoke visuals that can be transported inside your USD scenes into RealityKit applications on xrOS.\n\nReality Composer Pro introduces a Shader Graph that authors MaterialX nodes embedded inside of USD files.\n\nThis enables the creation of shaders using an interactive node graph to compose the shader logic.\n\nMaterialX shader graphs are how creators will be constructing custom shaders for xrOS content.\n\nIn addition to many of the standard MaterialX nodes, Reality Composer Pro also has a few custom MaterialX nodes that enable a range of xrOS-specific platform features.\n\nSome of these shader nodes are: RealityKit PBR, our physically based rendering shader which enables realistic-looking 3D content; RealityKit Unlit, an unlit shader that lets you do more stylized shading; Geometry Modifiers that allow us to modify surface deformations; as well as several custom utility nodes.\n\nWe have a great developer session on how to use the Shader Graph to get you up and running with creating custom looks for your assets.\n\nSupport for MaterialX with USD grows across established third-party 3D applications, like SideFX's Houdini and LookdevX in Autodesk's Maya, shown here.\n\nReality Composer Pro then lets you preview your shaders to see how they'll look before deploying to your device.\n\nAs I mentioned, MaterialX is an open source project which enables creators and developers to make use of it in their own workflows and applications directly.\n\nThe MaterialX project includes support for generating shader code from your MaterialX node graphs.\n\nApple has added support to the project for creating Metal shader code to make the most use of our powerful GPUs.\n\nThis is now available in the MaterialX 1.38.7 release.\n\nFor developers who use USD, this also enables the future use of MaterialX within USD on macOS.\n\nHaving confidence in how your shaders behave is important, but so is having confidence in what your colors look like.\n\nSo we've expanded our handling of color space management for RealityKit, so you can make accurate-looking 3D content capable of using our wide gamut color range.\n\nBut first, a quick recap of why color spaces are important.\n\nColor spaces are how graphics programs understand how to represent colors from digital values, including the range of colors available.\n\nThis allows multiple applications to reliably display and edit the same colors.\n\nApple displays primarily use Display P3 as their color space, whereas many other platforms may use the more commonplace sRGB.\n\nDisplayP3 marries the wider primary range of digital cinema with the sRGB gamma curves used by computer displays.\n\nIn fact, it's capable of displaying up to 25 percent more colors than traditional sRGB, shown here as the black line within the greater Display P3 color space.\n\nThis allows for representing more of the colors we see in the real world, such as the vibrant feathers of a parrot, or the deep colors of your favorite clothes.\n\nMost color and image workflows tend to use sRGB, which represents a standard range of colors used by many monitors for decades.\n\nThese are still capable of creating good-looking content, but can't take full advantage of the beautiful, wider-range displays that Apple products ship with.\n\nIf you instead make use of the Display P3 color profile, you're now able to use the wider color range that RealityKit can provide on these displays.\n\nTextures authored with Display P3 in mind, and appropriately tagged, are able to express a much larger range of colors, with deeper and more saturated tones.\n\nThis effect may be subtle, but allows for the creation of more vibrant and authentic-looking assets.\n\nNotice the richer reds and the lush greens.\n\nMost importantly, color space tagging means your colors are accurate to what you saw when you made your content, avoiding accidental color shifts.\n\nMaterialX and Color Management are great new additions to our USD ecosystem.\n\nWe also have more to share about what's new in USD for our platforms and the greater ecosystem.\n\nAll our first party applications, such as Motion and Quick Look, now benefit from an updated and more efficient USD version.\n\nUSD supports a wide range of object types, also known as schemas.\n\nThis update also allows the Storm renderer in Preview on macOS to support rendering even more USD schemas and features.\n\nWe also continue to update our documentation to highlight features and schemas that are newly supported on our renderers and which platforms support them.\n\nAdditionally, we make note of other changes in behaviors, so we recommend that you periodically refresh yourself on the documentation linked in the video description.\n\nUSD also allows for custom schema types.\n\nAnd this year, RealityKit is introducing new Component schemas for its Entity Component System, or ECS for short, on xrOS.\n\nRealityKit's ECS splits the systems that process data from the Component data itself, allowing it to live alongside your 3D content.\n\nThanks to these custom schemas, you can now use RealityKitComponent for built-in Components, and RealityKitCustomComponent for your own Swift custom components.\n\nYour Swift components structs and dictionaries can be represented by the equivalent RealityKit USD schemas.\n\nRealityKit also builds upon USD's spatialAudio with RealityKit's Audio File, Audio File Group, and MixGroup to create even more immersive audio.\n\nLet's take a look at a USD file that represents some custom component data, as a USD prim, which is what USD calls objects in its hierarchy.\n\nThis allows your custom component data to live alongside your other prims such as geometry.\n\nSince this is all in USD, you can use any app that lets you author USD prims directly to create them alongside the rest of your scene.\n\nThis aligns with your corresponding Swift Component that can then be used to read these values from your USD components, such as here where different objects in your app may have specific Engagement Points associated with them.\n\nPlease check out our talks on building applications with Reality Composer Pro to learn more.\n\nWe continue to contribute to growing these technologies in the industry, as a growing ecosystem makes content creation easier for everyone.\n\nSo we've worked with Pixar and the community to list many of the software packages that now support USD on the OpenUSD webpage.\n\nThis allows creators to see how easily they can create USD-based content with their own existing workflows on a Mac.\n\nWe've also been working on making it easy to build USD for our portable platforms like iOS, so that as developers, you, too, can integrate USD into your own applications.\n\nThis enables you to create applications that can author immersive USD content.\n\nAdditionally, we're collaborating to reduce dependencies in the USD library so that it's easier to get up and running with USD across all platforms, with minimal work.\n\nUSD includes a technology called Hydra, an abstraction framework for renderers, and Storm, a real-time renderer that makes use of Hydra.\n\nApple has worked with Pixar to add Metal support to Storm, making use of our modern graphics API that enables developers to create high-performance, GPU-based applications on our platforms.\n\nLet's take a look at one scenario where this performance helps.\n\nThe Animal Logic ALab scene is representative of many feature film-level assets.\n\nWhen set to full resolution, this scene can take over 26GB of graphics memory, previously requiring desktop workstation GPUs.\n\nNow, with Metal in Hydra Storm, and unified memory on Apple silicon, a MacBook Pro lets you work on the go, even on demanding scenes like this, while retaining interactive performance.\n\nThis high-performance rendering in Storm also enables Blackmagic Design to add fast viewport rendering of USD to Fusion in DaVinci Resolve.\n\nBuilding on the collaboration from previous years, we continue to work with Autodesk on their open source Maya USD plugin.\n\nWe've made several contributions to the project, including enhancements to the export of geometry and materials for your assets.\n\nWe also have improvements to animation import.\n\nAll of this helps you have more seamless workflows to create spatial content for xrOS.\n\nSome of these features may be released in later releases of Maya USD, so we recommend keeping your plug-ins up to date.\n\nWe've also been working with the Blender Foundation, many individuals and partners like AMD, NVIDIA, and Unity, to deliver updates to Blender, an open-source 3D application.\n\nThis collaboration has enabled significantly improved USD import and export in Blender 3.5.\n\nThis includes USDZ support for the first time, allowing you to go directly to Quick Look.\n\nApple also worked with the Blender Foundation to introduce Metal support for their Eevee and Cycles renderer.\n\nNow with Blender 3.5, you can run Blender as a fully native Metal application, speeding up your UI, viewport, and final render.\n\nFinal renders can make use of your GPU to complete in up to half the time when compared to CPU based renders, and the viewport can now render up to 4 times faster than OpenGL in certain scenes.\n\nThat wraps up this overview of what's new in the USD Ecosystem.\n\nxrOS adds a whole new, exciting dimension to apps and experiences, built on a foundation of technologies like USD.\n\nI recommend continuing by checking out these related talks about Quick Look and Reality Composer Pro.\n\nBy collaborating on these open standards, we're building a strong ecosystem to make it faster and easier to create content for xrOS and all our platforms, and we can't wait to see what you create.\n\n♪",
    "segments": []
  },
  "resources": {
    "resourceLinks": [
      {
        "title": "Design",
        "url": "https://developer.apple.com/design/"
      },
      {
        "title": "Documentation",
        "url": "https://developer.apple.com/documentation/"
      },
      {
        "title": "Forums",
        "url": "https://developer.apple.com/forums/"
      },
      {
        "title": "Apple Design Awards",
        "url": "https://developer.apple.com/design/awards/"
      }
    ],
    "hdVideo": "https://devstreaming-cdn.apple.com/videos/wwdc/2023/10086/5/5ABD74BE-D973-47C9-9A9F-1F5AABE02C1A/downloads/wwdc2023-10086_hd.mp4?dl=1",
    "sdVideo": "https://devstreaming-cdn.apple.com/videos/wwdc/2023/10086/5/5ABD74BE-D973-47C9-9A9F-1F5AABE02C1A/downloads/wwdc2023-10086_sd.mp4?dl=1"
  },
  "relatedVideos": [
    {
      "id": "10080",
      "year": "2023",
      "title": "Build spatial experiences with RealityKit",
      "url": "https://developer.apple.com/videos/play/wwdc2023/10080"
    },
    {
      "id": "10274",
      "year": "2023",
      "title": "Create 3D models for Quick Look spatial experiences",
      "url": "https://developer.apple.com/videos/play/wwdc2023/10274"
    },
    {
      "id": "10202",
      "year": "2023",
      "title": "Explore materials in Reality Composer Pro",
      "url": "https://developer.apple.com/videos/play/wwdc2023/10202"
    },
    {
      "id": "10083",
      "year": "2023",
      "title": "Meet Reality Composer Pro",
      "url": "https://developer.apple.com/videos/play/wwdc2023/10083"
    }
  ],
  "extractedAt": "2025-07-18T10:30:38.181Z"
}