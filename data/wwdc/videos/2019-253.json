{
  "id": "253",
  "year": "2019",
  "url": "https://developer.apple.com/videos/play/wwdc2019/253/",
  "title": "Exploring Tinted Graphic Complications",
  "speakers": [],
  "duration": "",
  "topics": [
    "SwiftUI & UI Frameworks"
  ],
  "hasTranscript": true,
  "hasCode": false,
  "transcript": {
    "fullText": "Hi. My name is Jared McGann. I'm an engineering manager in watchOS. In watchOS 5, Apple released the new Infograph clock faces with graphic complications. In watchOS 6, we've enhanced graphic complications with a new tinted mode. Any clock face with graphic complications supports tinted complications. Here's some more examples from our new watch faces in watchOS 6. These graphic complications are composed of three data types; gauges, text, and images. The system alters the appearance of each into contexts. Let's walk through each one. In tinted context, gauges are displayed as a solid color rather than a color gradient.\n\nThe color of the gauge is determined by the system, as informed by the customer's color selection. If your complication relies on color to communicate information within the gauge, you may need to reconsider how you display that information in your complication.\n\nText is also displayed with a single color in tinted contexts. Again, the color is determined by the system, based on the customer's color choice. Multicolor text providers are reduced to a single color, as seen in the activity rings complication.\n\nLastly, images are desaturated by default in tinted contexts, but we also have new API to provide alternate images in this mode.\n\nBefore we dive into the new API, I'd like to take a step back and talk about data providers generally. ClockKit includes a number of data providers for complications. These providers manage the data you supply to ClockKit for display within a complication.\n\nLet's take a look at the full color image provider.\n\nThe image property specifies a full-color image to be displayed by a complication.\n\nThen there's an accessibility label property, which is a succinct label that identifies the purpose of the image. So how do you provide an alternate image for tinted contexts? In watchOS 6 there's a new property in CLKFullColorImageProvider called tintedImageProvider. It's an optional property where you can provide a separate image for tinted contexts if you don't want the full color image to be desaturated. This property is of the type CLKImageProvider. We chose this class because it allows you to provide both one-piece and two-piece template images for tinted contexts.\n\nLet's take a closer look at CLKImageProvider, which has been around since watchOS 2. The first thing to note is that CLKFullColorImageProvider is not derived from CLKImageProvider. These are two distinct classes. This class, CLKImageProvider, manages template images for display in a complication. The clock face displaying the complication determines how to display the image and what tint color to apply.\n\nThe first property is one-piece image, which is a single template image. This is the only required property.\n\nNext up is tint color. In some classic complication contexts, this color is applied to the template image within a complication. In graphic complications, tint color is ignored because color is determined by the system as influenced by the customer's color selection.\n\nThen, there are two-piece images, which are composed of the two-piece image background and two-piece image foreground properties.\n\nClassic complications use two-piece images in multicolor contexts, as seen here. Graphic complications use two-piece images in some tinted contexts. When applicable, two-piece images take priority over one-piece images. A two-piece image consists of a foreground image layered on top of a background image. Both images are template images. In classic complications, the color and the tint color property is applied to the background image and white to the foreground image. In tinted graphic complications, as previously mentioned, tint color is ignored. The system will determine the foreground and background colors as informed by the customer's color selection.\n\nLet's walk through a few scenarios for displaying images within a tinted graphic complication. The first is for the full color image to appear desaturated in tinted contexts. Here, we see the full color image desaturated, more or less gray scale on the right. To achieve this in code, merely initialize a CLKFullColorImageProvider without a tintedImageProvider, as seen here. When the tintedImageProvider property is nil, the system displays a desaturated version of the full color image.\n\nIn other scenarios, you may want to display an alternate template image in tinted contexts. Perhaps your full color image doesn't desaturate well, or maybe you're concerned about a logo being displayed in undesirable colors.\n\nTo do this in code, create a CLKImageProvider with the desired one-piece template image. Then supply that in the CLKFullColorImageProvider initializer alongside the full color image. In full color context, ClockKit will utilize the full color image. In tinted contexts, the one-piece image from the CLKImageProvider will be utilized.\n\nIt's worth noting that you can also provide the same full color image within the tintedImageProvider, and that image will be templatized instead of desaturated. We use this technique in many of the standard watchOS complications.\n\nLastly, you may want to provide an alternate two-piece image in tinted contexts.\n\nTo achieve this, create a CLKImageProvider with both one-piece and two-piece template images. Then supply this object in the CLKFullColorImageProvider initializer alongside the full color image. In tinted contexts, ClockKit will determine if the one-piece or two-piece image should be utilized.\n\nHere's a chart from the Human Interface Guidelines with various graphic complication layouts.\n\nAnd here you can see the same layouts in a tinted environment.\n\nRemember that ClockKit will alter the appearance of complications in tinted contexts. Tint color in tinted graphic complications is determined by the system, as informed by the customer's color selection. And lastly, we've supplied new API that allows you to provide alternate template images to be displayed in tinted contexts.\n\nIf you're new to complications or would like to learn more, check out these videos on developer.apple.com.",
    "segments": []
  },
  "resources": {
    "resourceLinks": [
      {
        "title": "Design",
        "url": "https://developer.apple.com/design/"
      },
      {
        "title": "ClockKit",
        "url": "https://developer.apple.com/documentation/ClockKit"
      },
      {
        "title": "Documentation",
        "url": "https://developer.apple.com/documentation/"
      },
      {
        "title": "Forums",
        "url": "https://developer.apple.com/forums/"
      },
      {
        "title": "Apple Design Awards",
        "url": "https://developer.apple.com/design/awards/"
      }
    ],
    "hdVideo": "https://devstreaming-cdn.apple.com/videos/wwdc/2019/253llfvak2onhcnjf3w/253/253_hd_exploring_tinted_graphic_complications.mp4?dl=1",
    "sdVideo": "https://devstreaming-cdn.apple.com/videos/wwdc/2019/253llfvak2onhcnjf3w/253/253_sd_exploring_tinted_graphic_complications.mp4?dl=1"
  },
  "extractedAt": "2025-07-18T10:57:57.919Z"
}